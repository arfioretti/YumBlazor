@page "/categorylist"

@inject ICategoryRepository _categoryRepository
@inject IJSRuntime _JS

<BsModal OnModalConfirmation="ConfirmDelete_Click"
Title="@TitleText"
ButtonStyle="btn-danger"
ButtonText="Delete">
</BsModal>

@if(IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>

}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="crd-header bg-black bg-gradient m-lg-0  py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>

            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="categoryinsert" class="btn btn-large btn-secondary style=" width:250px""><i class="bi bi-file-plus"></i>Add New Category</a>
                </div>
            </div>
            <p>Category List</p>
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var cat in Categories)
                    {
                        <tr>
                            <td>@cat.Name</td>
                            <td>
                                <a href="@($"categoryupdate/{cat.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i>Update</a>
                                @*                                 <a href="@($"categorydelete/{cat.Id}")" class="btn btn-danger"><i class="bi bi-trash3"></i>Delete</a>
 *@                                <button class="btn btn-danger" @onclick="()=>HandleDelete(cat.Id, cat.Name)"><i class="bi bi-trash3"></i>Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = false;
    private IEnumerable<Category> Categories = new List<Category>();
    private int DeleteCategoryId { get; set; } = 0;
    public string TitleText { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        // await Task.Delay(2000);
        await LoadCategory();
        IsProcessing = false;
    }
    private async Task  LoadCategory()
    {
        Categories = await _categoryRepository.GetAllAsync();
    }
    private async Task HandleDelete(int id, string name)
    {
        DeleteCategoryId = id;
        TitleText = "Are you sur to delete Name:" + name;
        await _JS.InvokeVoidAsync("ShowConfirmationModal");

    }

    private async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        await _JS.InvokeVoidAsync("HideConfirmationModal"); //micado

        if (isConfirmed && DeleteCategoryId != 0)
        {
            var result = await _categoryRepository.DeleteAsync(DeleteCategoryId);
            if(result)
            {
                _JS.ToastrSuccess("Category Delete successfully");
                await LoadCategory();
            }
            else
            {
                _JS.ToastrError("delete failure");
            }
        }

        DeleteCategoryId = 0;
        IsProcessing = false;
    }
}
